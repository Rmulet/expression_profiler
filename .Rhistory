molten = melt(ol2,id.vars="tx_name")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[tx_name==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation analysis", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
plot_average_methylation(prom.gata,dt2,"jitterplot")
prom.gata
plot_average_methylation <- function(proms,meth,type) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation analysis", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
plot_average_methylation(prom.gata,dt2,"jitterplot")
plot_average_methylation <- function(proms,meth,type) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation analysis", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START-100000,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Jitterplot2.svg",width=12,height=8)
plot_average_methylation(prom.gata,dt2,"jitterplot")
dev.off()
plot_average_methylation <- function(proms,meth,type) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation analysis", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START-10000,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Jitterplot2.svg",width=12,height=8)
plot_average_methylation(prom.gata,dt2,"jitterplot")
dev.off()
plot_average_methylation <- function(proms,meth,type) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation analysis", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START-5000,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Jitterplot2.svg",width=12,height=8)
plot_average_methylation(prom.gata,dt2,"jitterplot")
dev.off()
plot_average_methylation(prom.gata,dt2,"jitterplot")
plot_average_methylation <- function(proms,meth,type) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation analysis", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START-7000,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Jitterplot2.svg",width=12,height=8)
plot_average_methylation(prom.gata,dt2,"jitterplot")
dev.off()
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Jitterplot2.svg",width=13,height=8)
plot_average_methylation(prom.gata,dt2,"jitterplot")
dev.off()
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Profile2.svg",width=13,height=8)
plotTracks(list(itrack,ref_track,dTrack,a,biomTrack),from=START,to=END,cex.title=1) # ,sizes=c(0.5,1,2,2)
dev.off()
plot_average_methylation <- function(proms,meth,type) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = SNP[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation likelihood (%)", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START-7000,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Jitterplot2.svg",width=13,height=8)
plot_average_methylation(prom.gata,dt2,"jitterplot")
dev.off()
dTrack <- DataTrack(granges, name="Methylation likelihood (%)",type=c('a','confint'),groups=SNP,
stacking = "squish", cex=0.7,fontcolor.feature="black",color='red',na.rm=T)
a <- AnnotationTrack(prom.gata,name="BED",featureAnnotation="id",cex=0.7,fontcolor.feature="black",size=0.5,chromosome = CHR)
svg("E:/Roger/Work/ErasmusMC/GATA2_ASE/Nanopore/Methylation_Profile2.svg",width=13,height=8)
plotTracks(list(itrack,ref_track,dTrack,a,biomTrack),from=START,to=END,cex.title=1) # ,sizes=c(0.5,1,2,2)
dev.off()
library(docopt)
library(argparse)
install.packages("argparser")
library(docopt)dt
dt
proms
prom.gata
meth
dt2
strsplit(":|-","chr3:128205859-128212930")
strsplit(":|-","chr3:128205859-128212930",perl=T)
strsplit("chr3:128205859-128212930",":|-")
unlist(strsplit("chr3:128205859-128212930",":|-"))
plot_methylation_profile <- function(proms,meth,CHR,START,END) {
granges <- makeGRangesFromDataFrame(meth,keep.extra.columns = T)
itrack <- IdeogramTrack(genome='hg19',chromosome=CHR,showBandId=T,cex.bands=1.4,cex=1.2,size=0.3) # Ideogram, Dl from UCSC
ref_track <- GenomeAxisTrack(add35=TRUE,add53=TRUE,littleTicks=T,cex=1.2) # Coordinates
biomTrack <- BiomartGeneRegionTrack(genome = 'hg19',chromosome=CHR,start=START,end=END,size=0.4,cex.group=0.8,
name="Ensembl Genes",transcriptAnnotation = "symbol",background.title="brown",just.group = "above")
biomTrack@range <- biomTrack@range[biomTrack@range$feature %in% c('protein_coding','utr3','utr5')]
biomTrack@range <- biomTrack@range[biomTrack@range$transcript %in% prom.gata$tx_id]
# GROUPS MUST BE A FACTOR
dTrack <- DataTrack(granges, name="Methylation likelihood (%)",type=c('a','confint'),groups=SNP,
stacking = "squish", cex=0.7,fontcolor.feature="black",color='red',na.rm=T)
annotation <- AnnotationTrack(proms,name="BED",featureAnnotation="id",cex=0.7,fontcolor.feature="black",size=0.5,chromosome = CHR)
plotTracks(list(itrack,ref_track,dTrack,annotation,biomTrack),from=START,to=END,cex.title=1) # ,sizes=c(0.5,1,2,2)
}
plot_methylation_profile(dt2,prom.gata,REGION)
REGION = "chr3:128205859-128212930"
REGION = unlist(strsplit(REGION,":|-"))
REGION
plot_methylation_profile(dt2,prom.gata, as.list(d))
plot_methylation_profile(dt2,prom.gata, as.list(REGION))
plot_methylation_profile(dt2,prom.gata,REGION[1],REGION[2],REGION[3])
REGION
sapply(REGION[2:3],as.integer)
REGION[2:3] <- sapply(REGION[2:3],as.integer)
plot_methylation_profile(dt2,prom.gata,REGION[1],REGION[2],REGION[3])
REGION
REGION[2:3] <- sapply(REGION[2:3],as.integer)
REGION
REGION[2] <- 123
REGION
REGION = "chr3:128205859-128212930"
REGION[2:3] <- sapply(REGION[2:3],as.integer)
REGION
REGION = "chr3:128205859-128212930"
REGION <- as.list((strsplit(REGION,":|-"))[[1]])
REGION
REGION[2:3]
REGION[2:3] <- sapply(REGION[2:3],as.integer)
REGION
plot_methylation_profile(dt2,prom.gata,REGION[1],REGION[2],REGION[3])
REGION[2]
plot_methylation_profile(dt2,prom.gata,REGION[[1]],REGION[[2]],REGION[[3]])
REGION[[2]]
prom.gata
REGION[[1]]
granges
granges <- makeGRangesFromDataFrame(dt2,keep.extra.columns = T)
granges
dt2
plot_methylation_profile(prom.gata,dt2,SNPS,REGION[[1]],REGION[[2]],REGION[[3]])
plot_methylation_profile <- function(proms,meth,groups,CHR,START,END) {
granges <- makeGRangesFromDataFrame(meth,keep.extra.columns = T)
itrack <- IdeogramTrack(genome='hg19',chromosome=CHR,showBandId=T,cex.bands=1.4,cex=1.2,size=0.3) # Ideogram, Dl from UCSC
ref_track <- GenomeAxisTrack(add35=TRUE,add53=TRUE,littleTicks=T,cex=1.2) # Coordinates
biomTrack <- BiomartGeneRegionTrack(genome = 'hg19',chromosome=CHR,start=START,end=END,size=0.4,cex.group=0.8,
name="Ensembl Genes",transcriptAnnotation = "symbol",background.title="brown",just.group = "above")
biomTrack@range <- biomTrack@range[biomTrack@range$feature %in% c('protein_coding','utr3','utr5')]
biomTrack@range <- biomTrack@range[biomTrack@range$transcript %in% proms$tx_id]
dTrack <- DataTrack(granges, name="Methylation likelihood (%)",type=c('a','confint'),groups=groups,
stacking = "squish", cex=0.7,fontcolor.feature="black",color='red',na.rm=T)
annotation <- AnnotationTrack(proms,name="BED",featureAnnotation="id",cex=0.7,fontcolor.feature="black",size=0.5,chromosome = CHR)
plotTracks(list(itrack,ref_track,dTrack,annotation,biomTrack),from=START,to=END,cex.title=1) # ,sizes=c(0.5,1,2,2)
}
plot_methylation_profile(prom.gata,dt2,SNP,CHR=REGION[[1]],START=REGION[[2]],END=REGION[[3]])
molten$variable
molten = melt(ol2,id.vars="id")
plot_average_methylation <- function(proms,meth,type,groups,CHR,START,END) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = groups[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation likelihood (%)", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
plot_average_methylation <- function(proms,meth,groups,type,CHR,START,END) {
dt.gata = data.table(data.frame(proms))[,.(chr=seqnames,start,end,id)]
setkey(dt.gata, chr, start, end)
setkey(meth,chr,start,end)
ol = foverlaps(dt.gata,meth,by.y=c("chr","start","end"))
ol2 = ol[!is.na(start),lapply(.SD[,grepl("-",colnames(ol)),with=F],mean,na.rm=T),by=c('id')] # by = c('chr','i.start','i.end')
molten = melt(ol2,id.vars="id")
molten$treatment = groups[molten$variable]
if (type == "boxplot") {
geom = list(geom_boxplot(),scale_fill_brewer(palette = "Set1"))
} else if (type == "jitterplot") {
geom = list(geom_point(aes(color=treatment)),scale_color_brewer(palette="Set1"))
}
details <- function(identifier, ...) {
d <- data.frame(molten[id==identifier])
message(identifier)
g <- ggplot(d,aes(x=treatment,y=value,fill=treatment)) + theme_minimal() + theme(legend.position="none",axis.title.x=element_blank(),axis.title.y=element_blank()) +
geom +  scale_y_continuous(limits=c(0,max(d$value)*1.3)) +
theme(axis.line = element_line(size = 1.5),axis.text = element_text(face="bold")) +
geom_signif(comparisons=list(c("G","C")))
print(g,newpage=F)
}
deTrack <- AnnotationTrack(range = proms, genome = "hg19",details.size=0.8,background.title='darkgrey',
chromosome = CHR, name = "Methylation likelihood (%)", stacking = "squish", fun = details,featureAnnotation="id",
cex=0.7,fontcolor.feature="black",color='red')
plotTracks(list(itrack,ref_track,deTrack,biomTrack),from=START,to=END,cex.title=1,col.line="black") # ,sizes=c(0.5,1,2,2)
}
plot_average_methylation(prom.gata,dt2,groups=SNP,type="jitterplot",REGION[[1]],REGION[[2]],REGION[[3]])
?parse_args
library(argparser)
?parse_args
?arg_parser
devtools::install_github('Mikata-Project/ggthemr')
install.packages("rlang")
install.packages("rlang")
shiny::runApp('E:/Roger/Work/ErasmusMC/shiny/expression_profiler')
molten$color <- c("black","red")
LL100 = fread("data/LL100.txt")
setwd("E:/Roger/Work/ErasmusMC/shiny/expression_profiler")
CCLE = fread("data/CCLE.txt")
LL100 = fread("data/LL100.txt")
f = LL100[Symbol == "CEBPA"]
d = LL100[Symbol == "CEBPA"]
molten = melt(d,measure.vars=colnames(d))
moltne
molte
molten
molten = melt(d,measure.vars=colnames(d),id.vars="Symbol")
molten = melt(d,measure.vars=colnames(d)[colnames(d)=="Symbol"],id.vars="Symbol")
molten
melt(d,measure.vars=colnames(d)[colnames(d)=="Symbol"])
melt(d,measure.vars=colnames(d)[colnames(d)!="Symbol"])
molten = melt(d,measure.vars=colnames(d)[colnames(d)!="Symbol"])
molten = molten[order(value)]
molten$color <- sample(c("black","red"),100)
molten$color <- sample(c("black","red"),100,replace=T)
molten
ggplot(molten,aes(x=variable,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)")
ggplot(molten,aes(x=variable,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity()
molten
molten$variable = factor(molten$variable,levels=molten$variable[order(molten$value)]
molten$color <- ifelse(molten$variable  %in% input$lines,"red","black")
ggplot(molten,aes(x=variable,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity()
molten$variable = factor(molten$variable,levels=molten$variable[order(molten$value)]
molten$variable = factor(molten$variable,levels=molten$variable[order(molten$value)])
ggplot(molten,aes(x=variable,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity()
runApp()
runApp()
runApp()
runApp()
output$waterfall <- plot(1:10)
plot(1:10)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
d
melt(d,measure.vars=colnames(d)[colnames(d)!="Symbol"])
molten = melt(d,measure.vars=colnames(d)[colnames(d)!="Symbol"])
ggplot(molten,aes(x=variable,y=value)) + geom_bar(stat="identity") +
labs(x="Cell lines",y="Expression (TPM)") + facet_wrap(~Symbol)
runApp()
runApp()
d = [Symbol %in% c("MECOM","CEBPA"),input$lines,with=F]
d = CCLE[Symbol %in% c("MECOM","CEBPA"),input$lines,with=F]
colnames(CCLE)
d = CCLE[Symbol %in% c("MECOM","CEBPA"),c("697","DM3"),with=F]
d = CCLE[Symbol %in% c("MECOM","CEBPA"),c("HG3","DM3"),with=F]
d
molten = melt(d,measure.vars=colnames(d)[colnames(d)!="Symbol"])
moltne
molten
runApp()
f = CCLE[Symbol == "CEBPA"]
molten = melt(f,measure.vars=colnames(f)[colnames(f)!="Symbol"])
molten
molten$variable = factor(molten$variable,levels=molten$variable[order(molten$value)])
molten
molten$color <- ifelse(molten$variable  %in% input$lines,"red","black")
ggplot(molten,aes(x=variable,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity()
ggplot(molten,aes(x=variable,y=value)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)")
molten
f = CCLE[Symbol %in% c("CEBPA","MECOM")]
molten = melt(f,measure.vars=colnames(f)[colnames(f)!="Symbol"])
factor(molten$variable,levels=molten$variable[order(molten$value)])
f
molten
molten[order(Symbol,value)]
molten[paste0(Symbol,variable),order(Symbol,value)]
molten[paste(c(Symbol,variable)),order(Symbol,value)]
molten[order(Symbol,value)]
molten[order(Symbol,value),paste0(Symbol,variable)
]
molten[order(Symbol,value),paste0(Symbol,"__",variable)
molten[order(Symbol,value),paste0(Symbol,"__",variable)]
molten$term = factor(molten[order(Symbol,value),paste0(Symbol,"__",variable)],levels=molten[order(Symbol,value),paste0(Symbol,"__",variable)])
molten
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x))
molten$color <- ifelse(molten$variable  %in% input$lines,"red","black")
molten$color <- sample(c("red","black"),398)
molten$color <- sample(c("red","black"),398,repl=T)
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x))
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) + facet_wrap(~Symbol)
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__", "", x))
molten$term
molten = molten[order(Symbol,value)]
molten
molten = molten[order(Symbol,value)]
molten$term = factor(molten[,paste0(Symbol,"__",variable)],
levels=molten[,paste0(Symbol,"__",variable)])
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__", "", x))
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__", "", x)) + factor_wrap(~Symbol)
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__", "", x)) + facet_wrap(~Symbol)
molten[Symbol == "MECOM"]
ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__", "", x)) + facet_wrap(~Symbol,scales="free")
library(plotly)
g = ggplot(molten,aes(x=term,y=value,color=color)) + geom_point() +
labs(x="Cell lines",y="Expression (TPM)") + scale_colour_identity() +
scale_x_discrete(labels = function(x) gsub("__", "", x)) + facet_wrap(~Symbol,scales="free")
ggplotly(g)
g
?ggplotly
dev.off()
dev.off(g)
ggplotly(g)
install.packages("tidyverse")
install.packages("tidyverse")
ggplotly(g)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
? tabPanel
runApp()
runApp()
?plotlyOutput
runApp()
runApp()
?tabPanel
runApp()
runApp()
